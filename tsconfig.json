{
  "compilerOptions": {
    "target": "ES2021",
    "useDefineForClassFields": true,
    "lib": ["ES2020", "DOM", "DOM.Iterable"],
    "module": "ESNext",
    "skipLibCheck": true,
    "rootDir": "src",
    "baseUrl": "src",
    "paths": {
      "assets/*": ["assets/*"],
      "pages/*": ["pages/*"],
      "stores/*": ["stores/*"],
      "config/*": ["config/*"],
      "services/*": ["services/*"],
      "components/*": ["components/*"],
    },

    /* Bundler mode */
    "moduleResolution": "node",               /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). 'bundler' for use with bundlers. Like node16 and nodenext, this mode supports package.json "imports" and "exports", but unlike the Node.js resolution modes, bundler never requires file extensions on relative paths in imports. */
    "allowImportingTsExtensions": true,
    "resolveJsonModule": true,
    "isolatedModules": true,
    "noEmit": true,
    "jsx": "react-jsx",

    /* Linting */
    "strict": true,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "noFallthroughCasesInSwitch": true,
    "allowSyntheticDefaultImports": true,
    "experimentalDecorators": true,
  },
  "include": ["src"],
  "references": [{ "path": "./tsconfig.node.json" }]
}
